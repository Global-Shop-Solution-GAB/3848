Program.Sub.ScreenSU.Start
gui.Form1..create
gui.Form1..caption("^")
gui.Form1..size(9600,6375)
gui.Form1..position(0,0)
gui.Form1..event(unload,Unload)
gui.Form1..alwaysontop(False)
gui.Form1..fontname("Arial")
gui.Form1..fontsize(8)
gui.Form1..forecolor(0)
gui.Form1..fontstyle(,,,,)
gui.Form1..BackColor(-2147483633)
gui.Form1..controlbox(True)
gui.Form1..maxbutton(True)
gui.Form1..minbutton(True)
gui.Form1..mousepointer(0)
gui.Form1..moveable(True)
gui.Form1..sizeable(True)
gui.Form1..ShowInTaskBar(True)
gui.Form1..titlebar(True)
gui.Form1.txt1.create(textbox,"",True,2730,300,0,200,200,True,0,Arial,8,-2147483643,1)
gui.Form1.cmd1.create(button)
gui.Form1.cmd1.caption("")
gui.Form1.cmd1.visible(True)
gui.Form1.cmd1.size(855,375)
gui.Form1.cmd1.zorder(0)
gui.Form1.cmd1.position(3100,200)
gui.Form1.cmd1.enabled(True)
gui.Form1.cmd1.fontname("Arial")
gui.Form1.cmd1.fontsize(8)
gui.Form1.cmd1.event(click,Browser)


Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start

Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors
'Inventory Master screen
V.Local.sError.Declare(String)
V.Local.sSql.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sPriceCat.Declare(String)
V.Local.ilength.Declare(Long)

'CHANGES 8-1-2013 by TRT
'field length of price category field can only be 30.  can not limit it with gab at the populate,
'so have to add to hook 10170 Pre-Save IInventory Hook
'if GAB-TEXT-1 length if over 30 , stop the save and let the user know.
'8-6-13
'lock the text field from editing anyway

'Populate hook
F.Intrinsic.Control.If(V.Caller.Hook,=,10120)
	V.Passed.GAB-LBL-1.Set("Price Category. 30 character max")
	V.Passed.GAB-BTN-1.Set("^")
	'Unhide Hidden Label, textbox, and button on CORE screen
	F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-LBL-1,"Hide",0)
	F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-BTN-1,"Hide",0)
	F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-TEXT-1,"Hide",0)

'	F.Intrinsic.Variable.SetProperty("GAB-TEXT-1","ML",30)
	'Set "HIdden Fields" location on the CORE screen: label, textbox, and button.
	'Label
	F.Intrinsic.Variable.SetProperty("GAB-LBL-1","PL",650)
	F.Intrinsic.Variable.SetProperty("GAB-LBL-1","PT",475)
	F.Intrinsic.Variable.SetProperty("GAB-LBL-1","PW",75)
	F.Intrinsic.Variable.SetProperty("GAB-LBL-1","PH",14)
	'Textbox
	F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-TEXT-1,"Lock",1)
	F.Intrinsic.Variable.SetProperty("GAB-TEXT-1","PL",650)
	F.Intrinsic.Variable.SetProperty("GAB-TEXT-1","PT",490)
	F.Intrinsic.Variable.SetProperty("GAB-TEXT-1","PW",175)
	'Button
	F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-BTN-1,"Lock",0)
	F.Intrinsic.Variable.SetProperty("GAB-BTN-1","PL",830)
	F.Intrinsic.Variable.SetProperty("GAB-BTN-1","PT",488)
	F.Intrinsic.Variable.SetProperty("GAB-BTN-1","PW",25)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndIf

F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)

F.Intrinsic.Control.If(V.Caller.Hook,=,10201)
	F.Intrinsic.Control.CallSub(Browser)
F.Intrinsic.Control.EndIf

F.Intrinsic.String.GSSPartString(V.Passed.000007,V.Passed.000008,V.Local.sPart)
F.Intrinsic.String.Concat("Select * From GCG_3848_Disc_Part Where Part = '",V.Local.sPart,"' and Loc = '",V.Passed.000009,"'",V.Local.sSql)
F.ODBC.Connection!con.OpenRecordsetRW("rst",V.Local.sSql)
'Change hook - part#
F.Intrinsic.Control.If(V.Caller.Hook,=,10125)
	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,False)
		V.Local.sPriceCat.Set(V.ODBC.con!rst.FieldValTrim!PRICE_CAT)
	F.Intrinsic.Control.Else
		V.Local.sPriceCat.Set("")
	F.Intrinsic.Control.EndIf
	V.Passed.GAB-TEXT-1.Set(V.Local.sPriceCat.Trim)
F.Intrinsic.Control.EndIf
'Save hook

'Pre_save Hook 10170
F.Intrinsic.Control.If(V.Caller.Hook,=,10170)
	'check field length, don't save allow if it is over 30 characters in length.
	F.Intrinsic.Control.If(V.Passed.GAB-TEXT-1.Length,>,30)
		F.Intrinsic.UI.Msgbox("Price Category  field can not be over 30 characters.","Error in Save")
		V.Passed.777777.Set(1)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.If(V.Caller.Hook,=,10185)
	'first and check to make sure the length of the field is not over 30
	'if it is stop the save and display a message
	
	F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,False)
		F.ODBC.con!rst.Set!Price_Cat(V.Passed.GAB-TEXT-1.Trim)
	F.Intrinsic.Control.Else
		F.ODBC.con!rst.AddNew
		F.ODBC.con!rst.Set!Part(V.Local.sPart)
		F.ODBC.con!rst.Set!Loc(V.Passed.000009)
		F.ODBC.con!rst.Set!Price_Cat(V.Passed.GAB-TEXT-1)
	F.Intrinsic.Control.EndIf
	F.ODBC.con!rst.Update
	'V.Passed.GAB-TEXT-1.Set("")
F.Intrinsic.Control.EndIf

F.ODBC.con!rst.Close
F.Intrinsic.Control.CallSub(Unload)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3848_Disc_Part.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Main.End

Program.Sub.Unload.Start
F.ODBC.Connection!con.Close
F.Intrinsic.Control.End


Program.Sub.Unload.End

Program.Sub.Browser.Start
F.Intrinsic.Control.SetErrorHandler("Browser_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sCol.Declare(String)
V.Local.sColW.Declare(String)
V.Local.sRet.Declare(String)


'browser sql edit by trt
'pulling the price cat from the gcg-disc-cat table as this is where the price categories
'are being stored by the user for the parts?.
F.Intrinsic.String.Concat("Select Distinct(Price_Cat) as Price_Category From GCG_3848_Disc_Cat Where Price_Cat <> ''","",V.Local.sSQL)
'F.Intrinsic.String.Split("Price Category*!*","*!*",V.Local.sCol)
'F.Intrinsic.String.Split("3500*!*","*!*",V.Local.sColW)
V.Local.sCol.Set("Price Category")
V.Local.sColW.Set("3500")
F.Intrinsic.UI.Browser("Select a Price Category","con",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
	V.Passed.GAB-TEXT-1.Set(V.Local.sRet.Trim)
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.CallSub(Unload)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Browser_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3848_Disc_Part.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Browser.End

Program.Sub.Comments.Start
${$0$}$GCG_Disc_Part$}$ERIC$}$3/1/2013
${$1$}$$}$$}$4$}$10170$}$INS010B-SAVE-BUTN-HOOK$}$8/1/2013 11:49:23 AM$}$(Program: INVMAIN; Screen: INS010B)

${$1$}$$}$$}$3$}$10201$}$GAB BUTTON 1 HOOK$}$4/15/2013 3:10:16 PM$}$(Program: INVMAIN; Screen: INS010B)

${$1$}$$}$$}$2$}$10185$}$INS010B-SAVE-BUTN-POST-HOOK$}$4/15/2013 3:09:52 PM$}$(Program: INVMAIN; Screen: INS010B)

${$1$}$$}$$}$1$}$10125$}$INS010B-LOAD-PART-HOOK$}$4/15/2013 3:09:33 PM$}$(Program: INVMAIN; Screen: INS010B)

${$1$}$$}$$}$0$}$10120$}$INS010B-POPULATE-HOOK$}$4/15/2013 3:09:03 PM$}$(Program: INVMAIN; Screen: INS010B)

${$4$}$0$}$$}$0$}$-1$}$Tyler$}$8/1/2013 11:49:44 AM$}$The field length of the GAB-TEXT-1 field is 255.  The table field is only 30 characters in length.  Added a conditional if statement to check the field length on the pre-save hook.

If the field length is above 30 characters GAB will pass 1 to the cancel flag, a message box will be displayed stating to the user that the field length contains to many characters.

A save can not be completed until they have corrected the issue.

Attachment to hook 10170 Pre-Save Hook is required.

${$4$}$0$}$$}$1$}$-1$}$TRT$}$8/6/2013 11:15:38 AM$}$Changed to look at the GCG_Disc_Cat table for the browser, not the GCG_DIsc_Part table that stores the category.
Program.Sub.Comments.End

